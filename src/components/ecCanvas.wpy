<style>
.ec-canvas {
    width: 100%;
    height: 400px;
}
</style>

<template>
    <canvas class="ec-canvas" canvas-id="eChart" @touchstart="touchStart" @touchmove="touchMove" @touchend="touchEnd"></canvas>
</template>

<script>
import wepy from 'wepy'
import * as echarts from '../plugins/ec-canvas/echarts'
import WxCanvas from '../plugins/ec-canvas/wx-canvas'

let boltChart = null;

export default class ecCanvas extends wepy.component {
    props = {
        ec: {
            type: Object
        },
        canvasId: {
            type: String,
            default: 'eChart'
        }
    }

    onLoad() {
        const version = wx.version.version.split('.').map(n => parseInt(n, 10))
        const isValid = version[0] > 1 || (version[0] === 1 && version[1] >= 9) || (version[0] === 1 && version [1] === 9 && version[2] >= 91)
        if (!isValid) {
            console.error('This version of Wexin is not supported by ECharts. Please update Wexin with versions after 1.9.91')
            return
        }
        const ctx = wx.createCanvasContext(this.canvasId, this.$wxpage)

        const canvas = new WxCanvas(ctx)
        echarts.setCanvasCreator(() => {
            return canvas
        })
        var query = wx.createSelectorQuery().in(this.$wxpage)
        query.select('.ec-canvas').boundingClientRect(res => {
            if (this.ec && this.ec.onInit) {
               boltChart = this.ec.onInit(canvas, res.width, res.height)
            }
        }).exec()
    }

    methods = {
        touchStart(e) {
            console.log("touchStart")
            if (boltChart && e.touches.length > 0) {
                var touch = e.touches[0]
                boltChart._zr.handler.dispatch('mousedown', {
                    zrX: touch.x,
                    zrY: touch.y
                })
                boltChart._zr.handler.dispatch('mousemove', {
                    zrX: touch.x,
                    zrY: touch.y
                })
            }
        },
        touchMove(e) {
            if (boltChart && e.touches.length > 0) {
                var touch = e.touches[0];
                boltChart._zr.handler.dispatch('mousemove', {
                    zrX: touch.x,
                    zrY: touch.y
                })
            }
        },
        touchEnd(e) {
            console.log("touchEnd")
            if (boltChart) {
                console.log(e.changedTouches)
                var touch = e.changedTouches ? e.changedTouches[0] : {}
                boltChart._zr.handler.dispatch('mouseup', {
                    zrX: touch.x,
                    zrY: touch.y
                })
                boltChart._zr.handler.dispatch('click', {
                    zrX: touch.x,
                    zrY: touch.y
                })
                this.$emit('handleClick', 11)
            }
        }
    }
}
</script>